{
  "typeIndex": 2098452,
  "name": "GraphQL content type not validated",
  "description": "<p>Cross-site request forgery (CSRF) vulnerabilities enable an attacker to induce users to perform actions that they do not intend to perform. This is done by creating a malicious website that forges a cross-domain request to the vulnerable application.</p>\n<p>Cross-site request forgery (CSRF) vulnerabilities in a GraphQL endpoint can arise when the content type is not validated. POST requests using a content-type of application/json are secure against forgery as long as the content type is validated, as an attacker wouldn't be able to make the victim's browser send this request.</p>\n<p>However, alternative methods such as GET, or any request that has a content-type of x-www-form-urlencoded, can be sent by a browser and so may leave users vulnerable to attack. Where this is the case, attackers may be able to craft exploits that use a valid CSRF token from a previous request to send malicious requests to the API.</p>",
  "remediation": "<p>Ensure that your GraphQL endpoint validates the content type. If the content type cannot be validated, ensure a valid CSRF token is required.</p>",
  "webIntro": null,
  "typicalSeverity": "LOW",
  "references": [
    {
      "title": "Web Security Academy: GraphQL API vulnerabilities",
      "url": "https://portswigger.net/web-security/graphql"
    },
    {
      "title": "Web Security Academy: Cross-site request forgery",
      "url": "https://portswigger.net/web-security/csrf"
    }
  ],
  "vulnerabilityClassifications": [
    {
      "title": "CWE-352: Cross-Site Request Forgery",
      "url": "https://cwe.mitre.org/data/definitions/352.html"
    },
    {
      "title": "CAPEC-62: Cross-Site Request Forgery",
      "url": "https://capec.mitre.org/data/definitions/62.html"
    }
  ]
}