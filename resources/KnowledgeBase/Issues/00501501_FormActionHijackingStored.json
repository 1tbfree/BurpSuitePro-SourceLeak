{
  "typeIndex": 5248257,
  "name": "Form action hijacking (stored)",
  "description": "<p>Form action hijacking vulnerabilities arise when an application places user-supplied input into the action URL of an HTML form. An attacker can use this vulnerability to construct a URL that, if visited by another application user, will modify the action URL of a form to point to the attacker's server. If a user submits the form then its contents, including any input from the victim user, will be delivered directly to the attacker.</p>\n<p> Even if the user doesn't enter any sensitive information, the form may still deliver a valid CSRF token to the attacker, enabling them to perform CSRF attacks. In some cases web browsers may help exacerbate this issue by autocompleting forms with previously entered user input. </p>\n\n<p>Stored form action hijacking vulnerabilities arise when the applicable input was submitted in an previous request and stored by the application.</p>",
  "remediation": "<p>Consider hard-coding the form action URL, or implementing a whitelist of allowed values.</p>",
  "webIntro": null,
  "typicalSeverity": "MEDIUM",
  "references": [],
  "vulnerabilityClassifications": [
    {
      "title": "CWE-73: External Control of File Name or Path",
      "url": "https://cwe.mitre.org/data/definitions/73.html"
    },
    {
      "title": "CWE-20: Improper Input Validation",
      "url": "https://cwe.mitre.org/data/definitions/20.html"
    },
    {
      "title": "CAPEC-153: Input Data Manipulation",
      "url": "https://capec.mitre.org/data/definitions/153.html"
    }
  ]
}