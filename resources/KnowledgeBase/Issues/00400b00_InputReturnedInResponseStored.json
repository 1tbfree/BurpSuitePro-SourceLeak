{
  "typeIndex": 4197120,
  "name": "Input returned in response (stored)",
  "description": "<p>Retrieval of stored input arises when user input is stored and later embedded into the application's responses. </p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>\n\n<p>Vulnerabilities resulting from retrieval of stored input  are typically more serious than the equivalent reflected vulnerabilities because they do not require a separate delivery mechanism in order to reach target users. Depending on the affected functionality, ordinary users may be exploited during normal use of the application. Note that automated detection of stored data retrieval cannot reliably determine whether input that is persisted within the application can be retrieved by any other user, only by authenticated users, or only by the attacker themselves. You should review the functionality in which the vulnerability appears to determine whether the application's behavior can feasibly be used to compromise other application users. </p>",
  "remediation": null,
  "webIntro": null,
  "typicalSeverity": "INFO",
  "references": [],
  "vulnerabilityClassifications": [
    {
      "title": "CWE-20: Improper Input Validation",
      "url": "https://cwe.mitre.org/data/definitions/20.html"
    },
    {
      "title": "CWE-116: Improper Encoding or Escaping of Output",
      "url": "https://cwe.mitre.org/data/definitions/116.html"
    }
  ]
}